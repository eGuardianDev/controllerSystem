#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_I2C_ADDR 0x3C // or 0x3C
#define SCREEN_WIDTH 128     // OLED display width, in pixels
#define SCREEN_HEIGHT 32     // OLED display height, in pixels
#define OLED_RST_PIN -1      // Reset pin (-1 if not available)

Adafruit_SSD1306 display(128, 32, &Wire, OLED_RST_PIN);

// OLED Animation: cd 2
// Code auto-generated by https://wokwi.com/animator, graphics by icons8.com
#include <ESP8266WiFi.h>
#include <espnow.h>

// REPLACE WITH RECEIVER MAC Address

#define FRAME_DELAY (30)
#define FRAME_WIDTH (32)
#define FRAME_HEIGHT (32)
#define FRAME_COUNT (sizeof(frames) / sizeof(frames[0]))


#define yAnalogPin D0
const byte PROGMEM frames[][128] = {
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,15,0,1,128,13,128,3,0,8,64,6,0,24,96,8,0,16,48,24,0,16,24,16,0,32,8,48,1,224,28,32,6,224,124,32,8,17,196,32,16,14,4,96,17,140,4,96,51,204,6,64,51,204,6,96,49,136,6,32,112,8,4,35,136,16,4,62,7,224,4,56,7,128,12,16,4,0,8,24,8,0,24,8,8,0,48,6,16,0,96,3,16,0,192,1,176,1,128,0,240,7,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,15,0,1,128,13,128,3,0,8,64,6,0,24,96,8,0,16,48,24,0,16,24,16,0,32,8,48,1,224,28,32,6,224,124,32,8,17,196,32,16,14,4,96,17,140,4,96,51,204,6,64,51,204,6,96,49,136,6,32,112,8,4,35,136,16,4,62,7,224,4,56,7,128,12,16,4,0,8,24,8,0,24,8,8,0,48,6,16,0,96,3,16,0,192,1,176,1,128,0,240,7,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,15,0,1,128,13,128,3,0,8,64,6,0,24,96,8,0,16,48,24,0,16,24,16,0,32,8,48,1,224,28,32,6,224,124,32,8,17,196,32,16,14,4,96,17,140,4,96,51,204,6,64,51,204,6,96,49,136,6,32,112,8,4,35,136,16,4,62,7,224,4,56,7,128,12,16,4,0,8,24,8,0,24,8,8,0,48,6,16,0,96,3,16,0,192,1,176,1,128,0,240,7,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,15,0,1,128,13,128,3,0,8,64,6,0,24,96,8,0,16,48,24,0,16,24,16,0,32,8,48,1,224,28,32,6,224,124,32,8,17,196,32,16,14,4,96,17,140,4,96,51,204,6,64,51,204,6,96,49,136,6,32,112,8,4,35,136,16,4,62,7,224,4,56,7,128,12,16,4,0,8,24,8,0,24,8,8,0,48,6,16,0,96,3,16,0,192,1,176,1,128,0,240,7,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,7,0,1,128,3,128,3,0,2,192,6,0,6,96,12,0,4,48,24,0,12,8,16,0,24,8,48,1,144,12,32,7,240,4,32,8,48,28,32,16,9,252,96,17,143,134,96,51,204,6,96,51,204,6,97,241,136,6,63,144,8,4,56,12,16,4,32,15,224,4,48,9,128,12,16,24,0,8,16,48,0,24,12,32,0,48,6,96,0,96,3,64,0,64,1,192,1,128,0,224,7,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,7,0,1,128,1,128,3,0,0,192,6,0,0,96,12,0,0,48,28,0,0,24,22,0,0,8,49,129,128,12,32,199,224,4,32,56,16,4,32,24,8,14,96,17,143,254,96,51,206,6,96,115,204,6,127,241,136,6,120,16,24,4,32,8,28,4,32,7,227,4,48,1,129,140,16,0,0,232,24,0,0,56,12,0,0,48,6,0,0,96,3,0,0,192,1,0,1,128,0,224,7,0,0,15,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,226,7,0,1,130,1,128,3,2,0,192,6,3,0,96,14,3,0,48,27,1,0,24,17,129,0,8,48,195,128,12,32,55,224,4,32,24,16,4,32,24,8,4,96,17,136,6,96,51,204,6,96,51,204,6,96,17,136,4,32,16,24,4,32,8,24,4,32,7,236,4,48,1,195,12,16,0,129,136,24,0,128,216,12,0,192,112,6,0,192,96,3,0,64,192,1,128,65,128,0,224,71,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,240,15,0,1,176,9,128,3,16,24,192,6,24,16,96,12,8,16,48,24,12,48,24,16,4,32,8,48,7,224,12,32,7,224,4,32,8,16,4,32,16,8,4,96,17,136,6,96,51,204,6,96,51,204,6,96,17,136,6,32,16,8,4,32,8,16,4,32,7,96,4,48,7,224,12,16,4,32,8,24,12,48,24,12,8,16,48,6,8,24,96,3,24,8,192,1,144,13,128,0,240,15,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,226,7,0,1,130,1,128,3,3,1,192,6,3,1,96,12,3,2,48,24,1,6,24,16,1,12,8,48,3,136,12,32,6,240,4,32,8,16,4,32,16,8,4,96,17,136,6,96,51,204,6,96,35,204,6,96,17,136,6,32,16,8,4,32,12,16,4,32,15,224,4,48,25,192,12,16,48,128,8,24,96,128,24,12,64,192,48,6,192,192,96,3,128,192,192,0,128,65,128,0,224,71,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,1,192,0,0,63,252,0,0,224,199,0,1,128,193,128,3,0,192,192,6,0,128,96,12,0,128,112,24,0,128,152,16,0,131,8,48,1,198,12,32,7,252,4,32,8,24,4,32,16,8,4,96,17,136,6,96,51,204,6,96,51,196,6,96,17,136,6,32,16,8,4,32,24,16,4,32,63,224,4,48,99,128,12,16,193,0,8,25,1,0,8,14,1,0,48,6,1,0,96,3,3,0,192,1,131,1,128,0,227,7,0,0,63,252,0,0,1,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,55,0,1,128,33,128,3,0,32,192,6,0,96,96,12,0,96,48,24,0,64,56,16,0,64,104,48,1,193,140,32,7,227,4,32,8,28,4,32,16,24,4,96,17,136,6,96,51,204,6,96,51,204,6,96,17,136,6,32,24,8,4,32,56,16,4,32,199,224,4,49,131,128,12,22,2,0,8,28,2,0,24,12,6,0,48,6,6,0,96,3,4,0,192,1,132,1,128,0,236,7,0,0,29,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,31,0,1,128,17,128,3,0,16,192,6,0,48,96,12,0,32,48,16,0,32,24,16,0,96,24,48,1,224,108,32,7,225,196,32,8,31,4,32,16,12,4,96,17,136,6,96,51,204,6,96,51,204,6,96,17,136,6,32,48,8,4,32,248,16,4,35,135,224,4,54,7,128,12,24,6,0,8,24,4,0,24,12,4,0,48,6,12,0,96,3,8,0,192,1,136,1,128,0,248,7,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,15,0,1,128,9,128,3,0,24,192,6,0,16,96,12,0,16,48,24,0,48,24,16,0,32,8,48,1,224,60,0,7,224,228,32,8,19,132,32,16,14,4,96,17,140,6,96,51,204,6,96,51,204,6,32,49,136,6,32,112,8,4,33,200,16,4,39,7,224,4,60,7,128,12,16,4,0,8,24,12,0,24,12,8,0,48,6,8,0,96,2,16,0,192,1,144,0,128,0,240,7,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,15,0,1,128,9,128,3,0,8,192,6,0,24,96,12,0,16,48,24,0,48,24,16,0,32,8,48,1,224,28,32,7,224,124,32,8,19,196,32,16,14,4,96,17,140,6,96,51,204,6,96,35,204,6,96,49,136,6,32,112,8,4,35,200,16,4,62,7,224,4,56,7,128,12,16,4,0,8,24,12,0,24,12,8,0,48,6,24,0,96,3,16,0,192,1,144,1,128,0,240,7,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,15,0,1,128,13,128,3,0,8,192,6,0,24,96,12,0,16,48,24,0,16,24,16,0,32,8,48,1,224,28,32,7,224,124,32,8,17,196,32,16,14,4,96,17,140,6,96,51,204,6,96,51,204,6,96,49,136,6,32,112,8,4,35,136,16,4,62,7,224,4,56,7,128,12,16,4,0,8,16,8,0,24,12,8,0,48,6,24,0,96,3,16,0,192,1,176,1,128,0,240,7,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,244,0,0,224,15,0,1,128,9,128,3,0,8,192,6,0,24,96,12,0,16,48,24,0,48,24,16,0,32,8,48,1,224,28,32,7,224,108,32,8,19,196,32,16,14,4,96,17,140,6,96,51,204,6,96,51,204,6,96,49,136,6,32,112,8,4,35,200,16,4,62,7,224,4,56,7,128,12,16,4,0,8,24,4,0,24,12,8,0,48,6,24,0,96,3,16,0,192,1,144,1,128,0,240,7,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,15,0,1,128,9,128,3,0,24,192,6,0,16,96,12,0,16,48,24,0,48,24,16,0,32,8,48,1,224,60,32,7,224,228,32,8,19,132,32,16,14,4,96,17,140,6,96,51,204,6,96,51,204,6,96,49,136,6,32,112,8,4,33,200,16,4,39,7,224,4,60,7,128,12,16,4,0,8,24,12,0,24,12,8,0,48,6,8,0,96,3,24,0,192,1,144,1,128,0,240,7,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,31,0,1,128,17,128,3,0,16,192,6,0,48,96,12,0,32,48,24,0,32,24,16,0,96,56,48,1,224,108,32,7,225,132,32,8,31,4,32,16,12,4,96,17,136,6,96,51,204,6,96,51,204,6,96,17,136,6,32,48,8,4,32,248,16,4,33,135,224,4,54,7,128,12,28,6,0,8,24,4,0,24,12,4,0,48,6,12,0,96,3,8,0,192,1,136,1,128,0,248,7,0,0,63,252,0,0,3,128,0,0,0,0,0},
  {0,0,0,0,0,3,224,0,0,63,188,0,0,224,39,0,1,128,33,128,3,0,32,192,6,0,96,96,12,0,64,48,24,0,64,56,16,0,64,232,48,0,192,140,32,7,231,4,32,8,28,4,32,16,24,4,96,17,136,6,96,51,204,6,96,51,204,6,64,17,136,6,32,24,8,4,32,56,16,4,32,231,224,4,49,131,128,12,23,2,0,8,28,2,0,24,12,2,0,48,6,6,0,96,3,4,0,192,1,132,1,128,0,228,7,0,0,63,252,0,0,7,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,135,0,1,128,129,128,3,0,128,192,6,0,128,96,12,0,128,240,24,0,129,152,16,0,131,8,48,1,134,12,32,7,252,4,32,8,24,4,32,16,8,4,96,17,136,6,96,51,204,6,96,51,204,6,96,17,136,6,32,16,8,4,32,24,16,4,32,63,224,4,48,97,128,12,16,193,0,8,25,129,0,24,15,1,0,48,6,1,0,96,3,1,0,192,1,129,1,128,0,225,7,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,7,192,0,0,63,252,0,0,228,7,0,1,128,3,128,3,6,3,192,6,2,6,96,12,2,4,48,24,2,12,24,16,2,24,8,48,3,144,12,32,7,240,4,32,8,48,4,32,16,8,4,96,17,136,4,96,51,196,6,96,51,204,6,96,17,136,6,32,16,8,4,32,12,16,4,0,7,224,4,48,9,192,12,16,24,64,8,24,48,64,24,12,32,64,48,6,96,64,96,3,192,96,192,1,192,33,128,0,96,39,0,0,63,252,0,0,3,224,0,0,0,0,0},
  {0,0,0,0,0,3,224,0,0,63,220,0,0,224,103,0,1,128,1,128,3,192,64,192,6,64,64,96,8,96,64,48,24,48,64,24,16,16,192,8,48,25,192,12,32,15,224,4,32,12,16,4,32,16,8,4,96,17,136,4,96,51,204,6,96,51,204,6,96,17,136,6,32,16,8,4,32,8,48,4,32,7,112,4,48,3,152,12,16,3,8,8,24,2,12,24,12,2,6,48,6,2,2,96,3,2,2,192,1,130,1,128,0,230,7,0,0,63,124,0,0,7,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,7,0,1,128,1,128,3,0,0,192,7,0,0,96,13,128,0,48,24,192,0,24,16,96,0,8,48,49,128,12,32,31,224,4,32,24,16,4,32,16,8,4,96,17,136,6,127,243,204,6,96,51,207,254,96,17,136,14,32,16,8,4,32,8,24,4,32,7,120,4,48,1,140,12,16,0,6,8,24,0,3,24,12,0,1,176,6,0,0,224,2,0,0,192,1,128,1,128,0,224,7,0,0,31,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,7,0,1,128,1,128,3,0,0,192,6,0,1,224,12,0,3,48,24,0,2,24,16,0,4,8,48,1,140,12,32,7,248,4,32,8,48,4,32,16,8,4,96,17,140,126,96,51,207,230,103,243,204,6,126,49,136,6,32,16,8,4,32,12,16,4,32,31,224,4,48,49,128,12,16,32,0,8,24,64,0,24,12,192,0,48,7,128,0,96,3,0,0,192,1,128,1,128,0,224,7,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,188,0,0,224,7,0,1,128,7,128,3,0,12,192,6,0,8,96,12,0,24,48,24,0,16,24,16,0,48,8,48,1,160,12,32,7,224,60,32,8,16,100,32,16,15,132,96,17,140,6,96,51,204,6,96,51,196,6,96,49,128,6,33,240,8,4,38,8,16,4,60,7,224,4,32,7,128,12,16,12,0,8,24,8,0,24,12,24,0,48,6,16,0,96,3,48,0,192,1,96,1,128,0,224,7,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,15,0,1,128,13,128,3,0,8,64,6,0,24,96,8,0,16,48,24,0,16,24,16,0,32,8,48,1,224,28,32,6,224,124,32,8,17,196,32,16,14,4,96,17,140,4,96,51,204,6,64,51,204,6,96,49,136,6,32,112,8,4,35,136,16,4,62,7,224,4,56,7,128,12,16,4,0,8,24,8,0,24,8,8,0,48,6,16,0,96,3,16,0,192,1,176,1,128,0,240,7,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,15,0,1,128,13,128,3,0,8,64,6,0,24,96,8,0,16,48,24,0,16,24,16,0,32,8,48,1,224,28,32,6,224,124,32,8,17,196,32,16,14,4,96,17,140,4,96,51,204,6,64,51,204,6,96,49,136,6,32,112,8,4,35,136,16,4,62,7,224,4,56,7,128,12,16,4,0,8,24,8,0,24,8,8,0,48,6,16,0,96,3,16,0,192,1,176,1,128,0,240,7,0,0,63,252,0,0,3,192,0,0,0,0,0},
  {0,0,0,0,0,3,192,0,0,63,252,0,0,224,15,0,1,128,13,128,3,0,8,64,6,0,24,96,8,0,16,48,24,0,16,24,16,0,32,8,48,1,224,28,32,6,224,124,32,8,17,196,32,16,14,4,96,17,140,4,96,51,204,6,64,51,204,6,96,49,136,6,32,112,8,4,35,136,16,4,62,7,224,4,56,7,128,12,16,4,0,8,24,8,0,24,8,8,0,48,6,16,0,96,3,16,0,192,1,176,1,128,0,240,7,0,0,63,252,0,0,3,192,0,0,0,0,0}
};
uint8_t broadcastAddress[] = {0xC8,0xC9,0xA3,0x09,0xDB,0x88};

typedef struct dataSend {
  int X;
} dataSend;

// Create a struct_message called myData
dataSend myData;

unsigned long lastTime = 0;  
unsigned long timerDelay = 50;  // send readings timer

bool sendThrough = false;
// Callback when data is sent
void OnDataSent(uint8_t *mac_addr, uint8_t sendStatus) {
  if (sendStatus == 0){
    sendThrough =  true;
  }
  else{
    sendThrough =  false;
  }
}

String macAddr;

void setupDisplay(){
  display.begin(SSD1306_SWITCHCAPVCC, SCREEN_I2C_ADDR);
  display.setTextColor(SSD1306_WHITE);
  display.setTextSize(.5); 
  //display.display(); // displayes logo not needed
  delay(10);
}
void setupEspNow(){
  macAddr = WiFi.macAddress();
  WiFi.mode(WIFI_STA);
  delay(10);
  if (esp_now_init() != 0) {
    Serial.println("Error initializing ESP-NOW");
    return;
  }

  esp_now_set_self_role(ESP_NOW_ROLE_CONTROLLER);
  esp_now_register_send_cb(OnDataSent);
  
  esp_now_add_peer(broadcastAddress, ESP_NOW_ROLE_SLAVE, 1, NULL, 0);
  delay(10);
}
void setupPins(){
  pinMode(yAnalogPin, OUTPUT);  
}
void setup() {
  setupDisplay();
  setupPins();
  setupEspNow();
  Serial.begin(9600);
}

int frame = 0;
int progress =0;
String data ;
int x,y;

void displayLoading(){
 display.clearDisplay();
    display.drawBitmap(14, 0, frames[frame], FRAME_WIDTH, FRAME_HEIGHT, 1);
    display.setCursor(20+30, 10);
    display.println(F("eControl"));
    display.setCursor(24+30, 18);
    display.println(F("by eGuardian"));
    display.display();  
    display.display();
    frame = (frame + 1) % FRAME_COUNT;
    if(frame == 0)progress+=1;
    delay(FRAME_DELAY);
}

void displayScreenData(){
    display.clearDisplay();
    display.setCursor(5, 10);
    display.println(String(macAddr));
    data = "x: "+String(x) + " y: " + String(y);
    display.println((data));
    display.display();
}
void sendWirelessData(){
    if ((millis() - lastTime) > timerDelay) {
      myData.X = x;
      esp_now_send(broadcastAddress, (uint8_t *) &myData, sizeof(myData));
      lastTime = millis();
    }
}

void loop() {
    if(progress != 2){
      displayLoading();
      return;
    }


    // digitalWrite(yAnalogPin,0);
    // x =analogRead(A0);
    // delay(10);
    // digitalWrite(yAnalogPin,1);
    // delay(10);
    // y =analogRead(A0);
    // delay(10);
    // digitalWrite(yAnalogPin,0);
    // delay(10);
    digitalWrite(yAnalogPin,HIGH);
    x = (analogRead(A0));
    delay(25);
    digitalWrite(yAnalogPin,LOW);
    y=(analogRead(A0));
    delay(25);


    sendWirelessData();
    displayScreenData();
    delay(25);
}